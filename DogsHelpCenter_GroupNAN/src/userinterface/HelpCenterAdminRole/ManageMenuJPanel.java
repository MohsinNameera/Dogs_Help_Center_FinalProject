/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HelpCenterAdminRole;

import Business.Reporter.Reporter;
import Business.Reporter.ReporterDirectory;
import Business.EcoSystem;
import Business.HelpCenter.Services;
import Business.HelpCenter.ServicesList;
import Business.HelpCenter.HelpCenter;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shivibhatt
 */
public class ManageMenuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageMenuJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount account;
    HelpCenter restaurant;

    public ManageMenuJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();
        initListners();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        restaurant = (HelpCenter) account;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        itemName = new javax.swing.JTextField();
        btnAddItem = new javax.swing.JButton();
        btnUpdateItem = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE SERVICES");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 41, 798, -1));

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "                                 Service Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMenu);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 380, 207));

        jLabel2.setText("Service Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, -1, -1));
        add(itemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 337, -1));

        btnAddItem.setText("Add Service");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });
        add(btnAddItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 381, 163, -1));

        btnUpdateItem.setText("Update");
        btnUpdateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateItemActionPerformed(evt);
            }
        });
        add(btnUpdateItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 381, 156, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        // TODO add your handling code here:
     /*   if (itemName.getText().isEmpty() || itemPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "please enter all mandatory fields");
            return;
        }
*/
        for (Services item : restaurant.getServicesList().getItemList()) {
            if (itemName.getText().equals(item.getName())) {
                JOptionPane.showMessageDialog(null, " Duplicate Items not allowed");
                return;
            }
        }
      /*  double price = 0.0;
        try {
            price = Double.valueOf(itemPrice.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, " Please enter a decimal number for Services Price!!");
            return;
        }
*/
        Services item = new Services(itemName.getText());

        // ecosystem.getItemList().addItem(item);
        restaurant.getServicesList().addItem(item);
        populateTable();
        itemName.setText("");
     //   itemPrice.setText("");

    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnUpdateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateItemActionPerformed
        // TODO add your handling code here:
        System.out.println("Naief");
        int selectedRow = tblMenu.getSelectedRow();
        if (selectedRow >= 0) {
            System.out.println("xyz" + selectedRow);
            System.out.println("");
            Services item = (Services) tblMenu.getValueAt(selectedRow, 0);
            System.out.println("item : " + item);
            item.setName(itemName.getText());
          //  item.setPrice(Double.valueOf(itemPrice.getText()));
            populateTable();
            itemName.setText("");
           // itemPrice.setText("");

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_btnUpdateItemActionPerformed
    private void populateTable() {
        ServicesList menu = restaurant.getServicesList();
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        model.setRowCount(0);
        for (Services item : menu.getItemList()) {

            Object[] row = new Object[1];
            row[0] = item;
           // row[1] = item.getPrice();
            model.addRow(row);

        }
    }

    private void display(Services item) {
        System.out.println("");
        itemName.setText(item.getName());
      //  itemPrice.setText(Double.valueOf(item.getPrice()) + "");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnUpdateItem;
    private javax.swing.JTextField itemName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMenu;
    // End of variables declaration//GEN-END:variables

    private void initListners() {
        tblMenu.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                int selectedRow = tblMenu.getSelectedRow();
                if (selectedRow >= 0) {
                    Services item = (Services) tblMenu.getValueAt(selectedRow, 0);
                    if (item != null) {
                        display(item);
                    }
                }
            }
        });
    }

}
